#include "main.h"

#include "nvram_local.hpp"
#include "fram_mtd.hpp"

using namespace chibios_rt;

/*
 ******************************************************************************
 * DEFINES
 ******************************************************************************
 */
#define FRAM_I2CD               I2CD_SLOW
#define FRAM_I2C_ADDR           0b1010000
#define FRAM_SIZE               (1024 * 32)

/*
 ******************************************************************************
 * EXTERNS
 ******************************************************************************
 */

static const FramConfig fram_cfg = {
  FRAM_SIZE
};

static const MtdConfig mtd_cfg = {
  &FRAM_I2CD,
  FRAM_I2C_ADDR,
};

static FramMtd nvram_mtd(&mtd_cfg, &fram_cfg);

NvramFs nvram_fs(nvram_mtd);

/*
 ******************************************************************************
 * PROTOTYPES
 ******************************************************************************
 */

/*
 ******************************************************************************
 * GLOBAL VARIABLES
 ******************************************************************************
 */

/*
 ******************************************************************************
 ******************************************************************************
 * LOCAL FUNCTIONS
 ******************************************************************************
 ******************************************************************************
 */

/*
 ******************************************************************************
 * EXPORTED FUNCTIONS
 ******************************************************************************
 */

void NvramInit(void){

  if (OSAL_SUCCESS != nvram_fs.mount()){
    nvram_fs.mkfs();
    if (OSAL_SUCCESS != nvram_fs.mount()){
      osalSysHalt("Storage broken");
    }
  }
}













